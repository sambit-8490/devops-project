version: '3.8'

services:
  # Frontend Service (React, Vue.js, etc.)
  frontend:
    build:
      context: ./frontend   # Path to the frontend directory
    container_name: frontend-container
    ports:
      - "3000:80"  # Map port 3000 (host) to port 80 (container) for frontend
    depends_on:
      - backend    # Ensure backend service is up before starting frontend
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://backend:8080   # Frontend connects to backend service via Docker network

  # Backend Service (Spring Boot, Node.js, etc.)
  backend:
    build:
      context: ./backend   # Path to the backend directory
    container_name: backend-container
    ports:
      - "9090:8080"  # Expose backend on port 8080
    depends_on:
      - db           # Ensure PostgreSQL service is up before starting backend
    networks:
      - app-network
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Library  # Database URL for Spring Boot (adjust for your app)
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=tiger

  # PostgreSQL Database Service
  db:
    image: postgres:13-alpine   # Use a lightweight version of PostgreSQL
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tiger
      POSTGRES_DB: Library     # The database name
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist data
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
